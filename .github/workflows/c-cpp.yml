name: C/C++ CI

on:
  push:
    branches: [ main, dev ]
    tags: ["v*"] # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: setup environment
      run: |
         sudo apt update && sudo apt-get install libxml2-dev liblzma-dev libicu-dev libpcap-dev libconfuse-dev libsctp-dev gcc make
         sudo dpkg -i lib/mmt-dpi*.deb && sudo ldconfig
    - name: make
      run: make 
    - name: make static
      run: make STATIC_LINK=1 VERBOSE=1
    - name: compile sample rules
      run: make sample-rules

  upload-asset:
    runs-on: ubuntu-18.04
    needs: build
    if: startsWith( github.ref, "refs/tags/v" )
    env:
      TAG_NAME: ${{ github.ref }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build the project, using zip for an artifact
        run: |
          make STATIC_LINK=1 sample-rules
          cp -r /opt/mmt/plugins ./plugins
          zip 5Greplay.zip plugins rules 5Greplay
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $TAG_NAME
          release_name: Release $TAG_NAME
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./5Greplay.zip
          asset_name: 5Greplay.zip
          asset_content_type: application/zip
    
